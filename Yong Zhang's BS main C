#include "stdio.h"
#define M 6	 // No. of numbers in array

// Necessary function to enable printf() using semihosting
extern void initialise_monitor_handles(void);
// Functions to be written
extern int bubble_sort(int* arg1, int arg2);

void BS_in_C(int array[], int num_elem) {
	int swap=0 ,status=1,storage, i;
	while(status==1){
       int counter=0;
       for (i = 0; i < num_elem - 1; i++) {
          if (array[i] > array[i + 1]) {
              storage = array[i];
              array[i] = array[i + 1];
              array[i + 1] = storage;
              counter++;
          }
        }
       swap=swap + counter;
       if (counter==0){
    	   status=0;
       }
   }
  printf("Using C, after %d swap , the array will be sorted in ascending order as:\n{ ", swap);
  for (int i = 0; i < num_elem; ++i) {
     printf("%d ", array[i]);
   }
  printf("}\n");
}

int main(void)
{
	// Necessary function to enable printf() using semihosting
	initialise_monitor_handles();
	int arr[M] = {18, 34, 32, 75, 11, 97};
	int swap,i;  // no. of total swaps

	// Bubble sort with bubble_sort.s
	swap = bubble_sort((int*)arr, (int)M);
	printf("After %d rounds of swap, the array is sorted as: \n{ ", swap);
	for (i=0; i<M; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("}\n");

	//Starting point of BS_in_C
	int array[] = {18, 34, 32, 75, 11, 97};
	int num_elem = sizeof(array) / sizeof(array[0]);
	BS_in_C(array, num_elem);
	// Infinite loop
	while(1){}
}


